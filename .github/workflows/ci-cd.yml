name: CI/CD

on:
  push:
    branches:
      - main

env:
  VERSION: 0.1.0
  GO_VERSION: 1.21.0
  PORT: 9876
  EMAIL_ACCOUNT: ${{ secrets.EMAIL_ACCOUNT }}
  EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
  SMTP_HOST: ${{ secrets.SMTP_HOST }}

jobs:
  test-app:
    name: Test out the Go app
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Test
        env:
          GOENV: testing
          PORT: ${{ env.PORT }}
          SMTP_PORT_SSL: 465
          SMTP_PORT_TLS: 587
          EMAIL_ACCOUNT: ${{ env.EMAIL_ACCOUNT }}
          EMAIL_PASSWORD: ${{ env.EMAIL_PASSWORD }}
          SMTP_HOST: ${{ env.SMTP_HOST }}
        run: go test ./...

      - name: Build
        run: go build -o sifatul-api ./main.go

  build-and-push-docker-hub:
    needs:
      - test-app

    name: Build and push docker img to Docker hub
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker hub
        uses: docker/login-action@v2
        with:
          username: sifatulrabbi
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: sifatulrabbi/sifatul-api:${{ env.VERSION }}

  prepare-host-server:
    needs:
      - test-app
      - build-and-push-docker-hub

    name: Prepare the Host server
    runs-on: ubuntu-latest
    steps:
      - name: Checkout app
        uses: actions/checkout@v3

      - name: Copy docker-compose.yml
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.HOST }}
          port: 22
          key: ${{ secrets.SSH_SECRET_KEY }}
          username: root
          source: docker-compose.yml
          target: ~/apps/sifatul-api
          overwrite: true

  run-the-app:
    needs:
      - test-app
      - build-and-push-docker-hub
      - prepare-host-server

    name: Run the app
    runs-on: ubuntu-latest
    steps:
      - name: Checkout app
        uses: actions/checkout@v3

      - name: Run start command
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          port: 22
          key: ${{ secrets.SSH_SECRET_KEY }}
          username: root
          script: cd ~/apps/sifatul-api && docker compose up -d
